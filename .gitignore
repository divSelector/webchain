# See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

# dependencies
front/node_modules
front/.pnp
front/.pnp.js

# testing
front/coverage

# production
front/build

# misc
front/.DS_Store
front/.env.local
front/.env.development.local
front/.env.test.local
front/.env.production.local

front/npm-debug.log*
front/yarn-debug.log*
front/yarn-error.log*



*.pyc
# Byte-compiled / optimized / DLL files
back/*/__pycache__/
__pycache__/
back/*.py[cod]
back/*$py.class

# C extensions
back/*.so

# Distribution / packaging
back/.Python
back/build/
back/develop-eggs/
back/dist/
back/downloads/
back/eggs/
back/.eggs/
back/lib/
back/lib64/
back/parts/
back/sdist/
back/var/
back/wheels/
back/share/python-wheels/
back/*.egg-info/
back/.installed.cfg
back/*.egg
back/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
back/*.manifest
back/*.spec

# Installer logs
back/pip-log.txt
back/pip-delete-this-directory.txt

# Unit test / coverage reports
back/htmlcov/
back/.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
back/cover/

# Translations
back/*.mo
back/*.pot

# Django stuff:
back/*.log
back/local_settings.py
back/db.sqlite3
back/db.sqlite3-journal


# Scrapy stuff:
back/.scrapy

# Sphinx documentation
back/docs/_build/

# PyBuilder
back/.pybuilder/
back/target/

# Jupyter Notebook
back/.ipynb_checkpoints

# IPython
back/profile_default/
back/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
#poetry.lock

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
#pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/#use-with-ide
back/.pdm.toml

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
back/__pypackages__/

# Celery stuff
back/celerybeat-schedule
back/celerybeat.pid

# SageMath parsed files
back/*.sage.py

# Environments
back/.env
back/.venv
back/env/
back/venv/
back/ENV/
back/env.bak/
back/venv.bak/

# Spyder project settings
back/.spyderproject
back/.spyproject

# Rope project settings
back/.ropeproject

# mkdocs documentation
back/site

# mypy
back/.mypy_cache/
back/.dmypy.json
back/dmypy.json

# Pyre type checker
back/.pyre/

# pytype static type analyzer
back/.pytype/

# Cython debug symbols
back/cython_debug/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
#.idea/


.env
staticfiles
nginx/build/*